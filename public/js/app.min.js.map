{"version":3,"sources":["variables.js","utility.js","helpers.js","frontend.js","app.js","filters.js","services.js","controllers.js","directives.js"],"names":[],"mappingsrhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpbfile":"app.min.js","sourcesContent":["var items = {\n    videoPrev       : null,\n    this_video_prev : null,\n    framePrev       : null,\n    modalInfo       : null,\n    videoCont       : null\n}\n\nvar utils = {\n    'width_window'        : 0,\n    'height_window'       : 0,\n    'left_dist'           : 0,\n    'right_dist'          : 0,\n    'incomplete_cover_dx' : false,\n    'biggerMediafiles'    : null,\n    'x'                   : null,\n    'y'                   : null,\n    'player'              : {\n        'modal'     : null,\n        'floating'  : null,\n        'queue'     : null\n    }\n}\n\nvar html = {\n    'prev_cover' : \"<div class='prev_cover'></div>\",\n    'ombra_dx'   : \"<div class='ombra_dx'></div>\",\n    'ombra_sx'   : \"<div class='ombra_sx'></div>\"\n}","\n/**\n * Ritorna il baseurl del sito\n * \n * @returns {String}\n */\nfunction baseUrl() {\n    var win_loc = window.location;\n    if (win_loc.host === 'localhost') {\n        return win_loc.protocol + \"//\" + win_loc.host + \"/edutube/public/\";\n    }\n    return win_loc.protocol + \"//\" + win_loc.host + \"/remote/host/path/\";\n};\n\n/**\n * Scrive in console solo se siamo su localhost\n * \n * @param {String} msg\n * @returns {void}\n */\nfunction debug_console(msg) {\n    var win_loc = window.location;\n    if (win_loc.host === 'localhost') {\n        console.log(msg);\n    }\n}\n\n/**\n * Scrive in console la risposta delle richieste via ajax\n * \n * @param {type} xhr\n * @param {type} status\n * @param {type} error\n * @returns {undefined}\n */\nfunction errorResponse(xhr, status, error) {\n    debug_console(xhr);\n    debug_console(status);\n    debug_console(error);\n}\n\n/**\n * Ridimensiona e centra l'immagine contenuta in container passando le dimensione e il contenitore della stesa\n * \n * @param {int} width_img\n * @param {int} height_img\n * @param {jQuery} container\n * @returns {Object}\n \nfunction resizeImage(width_img, height_img, container) {\n    \n    var new_h_img_width_cont = (height_img/width_img)*container.width();\n    console.log(container.height());\n    \n    var css = new Object();\n\n    if (new_h_img_width_cont <= container.height()) {\n        var width_num = ((width_img/height_img)*container.height());\n        var height_num = container.height();\n        css['width']       = width_num + 'px';\n        css['height']      = height_num + 'px';\n        css['margin-top']  = '0px';\n        css['margin-left'] = (-(width_num-container.width())/2) + 'px';\n    }\n    else {\n        css['width']       = container.width() + 'px';\n        css['height']      = new_h_img_width_cont + 'px';\n        css['margin-top']  = (-(new_h_img_width_cont - container.height())/2) + 'px';\n        css['margin-left'] = '0px';\n    }\n\n    return css;\n};*/\n\n/**\n * Ritorna la distanza dal bordo top della finestra dell'elemento passato\n * \n * @param {int} elem\n * @returns {int}\n */\nfunction dist_from_top(elem) {\n    var scrollTop     = $(window).scrollTop();\n    var elementOffset = elem.offset().top;\n    \n    return (elementOffset - scrollTop);\n}","/**\n * \n * @param {type} this_video_prev\n * @param {type} ombra\n * @param {type} left_mod\n * @param {type} cover\n * @returns {undefined}\n */\nfunction show_incomplete_prev(this_video_prev, ombra, left_mod, cover) {\n    \n    $(this_video_prev).css({'z-index': 200});\n    $(this_video_prev).append(ombra);\n    cover.append(html.prev_cover);\n\n    $(this_video_prev).stop(true).animate({\n        'left': left_mod\n    }, \n    {\n        duration : 100,\n        start: function() {\n            cover.find(\".prev_cover\").hide();\n\n            $(this_video_prev).find($(ombra).attr(\"class\")).hide();\n\n            cover.find(\".prev_cover\").fadeTo(100, 0.5);\n            $(this_video_prev).find($(ombra).attr(\"class\")).fadeTo(100, 1);\n        }\n    });\n}\n\n/**\n * \n * @param {type} this_video_prev\n * @param {type} ombra\n * @param {type} left_mod\n * @param {type} cover\n * @returns {undefined}\n */\nfunction hide_incomplete_prev(this_video_prev, ombra, left_mod, cover) {\n    \n    $(this_video_prev).stop(true).animate({\n        'left': left_mod\n    }, \n    {\n        duration : 100,\n        start: function() {\n\n            cover.find(\".prev_cover\").fadeTo(100, 0, function(){\n                $(this).remove();\n            });\n\n            $(this_video_prev).find(\".\"+$(ombra).attr(\"class\")).fadeTo(100, 0, function() {\n                $(this).remove();\n            });\n        },\n        end: function() {\n            $(this_video_prev).css({'z-index': 0});\n        }\n    });\n}\n\n/**\n* \n* @param {type} event\n* @returns {unresolved}\n*/\nfunction onPlayerStateChange(event, playerType) {\n\n    if (utils.player['floating'] != null) {\n        $('#floating_player').attr('ng-statuslistener', event.data);\n    }\n    \n    if (utils.player['modal'] != null) {\n        $('#myModal').attr('ng-statuslistener', event.data);\n    }\n\n    console.log('event.data' + event.data);\n\n    switch (event.data) {\n        case -1: return null; break;\n        case 0 : \n            console.log('stop video');\n            stopVideo(playerType); \n\n            /*if ($('#queue-box-cont').find('div').length > 0) {\n                playerManageHelper($('#play-video-floating'), 'video-cont-floating', 'floating', 0);\n            }*/\n\n        break;\n        case 2:\n            console.log('pause video');\n        break;\n        case 5:\n            console.log('cued video');\n        break;\n        default: return null; break;\n    }\n\n   /*var max_quality = event.target.getAvailableQualityLevels()[0];\n   var current_quality = event.target.getPlaybackQuality();\n\n   console.log(max_quality);\n   console.log(current_quality);\n\n   if (current_quality !== max_quality) {\n       event.target.setPlaybackQuality(max_quality);\n   }*/\n\n}\n\n/**\n* \n* @param {type} event\n* @returns {undefined}\n*/\nfunction onPlayerReady(event, start) {\n    console.log('play');\n    \n    if (start>0) {\n        event.target.seekTo(start, false);\n    }\n    \n    event.target.playVideo();\n}\n\n/**\n* \n* @param {type} cont\n* @returns {Boolean}\n*/\nfunction stopVideo(playerType){\n    \n    if (utils.player[playerType] !== null) {\n\n        utils.player[playerType].stopVideo();\n        utils.player[playerType].clearVideo();\n        utils.player[playerType].destroy();\n        \n        //utils.player[playerType] = null;\n        \n        return true;\n    }\n    return false;\n}\n\n/**\n * \n * @param {type} playButton\n * @param {type} idVideoCont\n * @returns {undefined}\n */\nfunction playerManageHelper(playButton, idVideoCont, playerType, start) {\n\n    playButton.parent().append(\"<div id='\" + idVideoCont + \"' style='position: absolute; width:100%; height:100%; top:0px; padding-bottom:inherit'></div>\");\n\n    var tag = document.createElement('script');\n    tag.src = \"https://www.youtube.com/iframe_api\";\n\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    var id = playButton.attr(\"data-videoid\");\n\n    utils.player[playerType] = new YT.Player(idVideoCont, {\n        videoId: id,\n        playerVars: {\n            'showinfo': 0,\n            'modestbranding': 0,\n            'rel': 0\n        },\n        events: {\n            'onReady': function(event) {\n                onPlayerReady(event, start);\n            },\n            'onStateChange': function(event) {\n                onPlayerStateChange(event, playerType);\n            }\n        }\n    });/**/\n\n}\n\n/*function addVideoToQueue(queueBox) {\n        var weight = $(queueBox).find('div').length;\n            \n        console.log($(queueBox).find('div').length);\n            \n        $('#play-video-floating').attr('data-videoid', $scope.item.YT_id);\n        $('#play-video').attr('data-videoid', $scope.item.YT_id);\n\n        $(queueBox).append('<div id=\"'+$scope.item.YT_id+'\" data-status=\"-1\" data-weight=\"' + weight + '\"></div>');\n    }\n}*/","\n$(window).on('load', function(event){\n});\n\n$(window).on('resize', function(){\n});\n\n$(document).ready(function(){\n        \n    /**\n     * \n     * @returns {undefined}\n     */\n    function dismissModal() {\n        stopVideo('modal');\n        $('div#video-cont').remove();\n    }\n\n    /**\n     * \n     * @param {type} event\n     * @returns {void}\n     */\n    function mousePosition(event) {\n        utils.x = event.pageX;\n        utils.y = event.pageY;\n    }\n\n    /**\n     *  \n     * @returns {void}\n     */\n    function playerManage() {\n        playerManageHelper($(this), 'video-cont', 'modal', 0);\n    }\n    \n    /**\n     * \n     * @returns {void}\n     */\n    function playerManageFloating() {\n        playerManageHelper($(this), 'video-cont-floating', 'floating', 0);\n    }\n    \n    // LISTENERS\n    \n    $(document).on('hidden.bs.modal', '#myModal', dismissModal);\n    //$(document).on('click', '#play-video', playerManage);\n    //$(document).on('click', '#play-video-floating', playerManageFloating);\n    $(document).on('mousemove mouseenter', mousePosition);\n});","var app = angular.module('edutube', ['ngRoute', 'ngAnimate'], function($interpolateProvider) {\n    $interpolateProvider.startSymbol('{??');\n    $interpolateProvider.endSymbol('??}');\n});\n\napp.constant('YT_event', {\n    LOADING         : -2,\n    UNSTARTED       : -1,\n    ENDED           : 0,\n    PLAYING         : 1,\n    PAUSED          : 2,\n    BUFFERING       : 3,\n    VIDEO_CUED      : 5,\n    \n    STATUS_CHANGE   : 100,\n    STOP            : 101, \n    PLAY            : 102,\n    PAUSE           : 103\n});\n\napp.constant('MODAL_STATUS', {\n    STATUS_CHANGE   : 200,\n    CLOSE           : 201,\n    OPEN            : 202\n});\n\napp.constant('QUEUE_event', {\n    ADD : 300\n})\n\n/*app.run(function(){\n    \n});\n\napp.config(function($routeProvider, $locationProvider) {\n    $routeProvider.when('/',{\n        templateUrl: 'angular/templates/viewPreview.template.html',\n        controller: 'postWallController'\n    });\n});*/","/**\n * \n * @param {type} param1\n * @param {type} param2\n */\napp.filter('dateToISO', function() {\n    return function(input) {\n        if (input != undefined) {\n            var goodTime = input.replace(/(.+) (.+)/, \"$1T$2Z\");\n            return goodTime;\n        }\n        return null;\n    };\n});\n\n/**\n * \n */\napp.filter('imgByName', function(){\n    return function(input, name) {\n        \n        var imgUrl = '';\n        \n        if (input) {\n            $.each(input, function(i, obj) {\n                if (obj.nome === name) {\n                    imgUrl = obj.url;\n                    return false;\n                }\n            });\n\n            if (imgUrl === '') {\n                return 'placeholder';\n            }\n            return imgUrl;\n        }\n        return null\n    };\n});","/**\n * Permette di passare i dati tra la griglia e la modale e tra la modale e la floating.\n * Permette di getire una coda di post in attesa di gestione\n */\napp.service('dataService', function ($http) {\n    return {\n        post: null,\n        queue: [],\n        current: 0,\n        \n        /**\n         * \n         * @returns {Object}\n         */\n        getPosts: function () {\n            var promise = $http\n                .get(baseUrl() + 'api/posts')\n                .then(function (resp) {\n                    return resp.data.featured;\n                });\n            return promise;\n        },\n        \n        /**\n         * \n         * @param {Object} post\n         * @returns {void}\n         */\n        setPost: function (post) {\n            this.post = post;\n        },\n        /**\n         * \n         * @returns {Object}\n         */\n        getPost: function () {\n            return this.post;\n        },\n        \n        /**\n         * \n         * @returns {void}\n         */\n        iniPostQueue: function() {\n            this.queue = [];\n        },\n        /**\n         * \n         * @param {Object} item\n         * @returns {void}\n         */\n        pushPostToQueue: function(item) {\n            this.queue.push(item);\n        },\n        /**\n         * \n         * @returns {Object}\n         */\n        popPostToQueue: function() {\n            return this.queue.pop();\n        },\n        /**\n         * \n         * @returns {int}\n         */\n        getQueueDim: function() {\n            return this.queue.length;\n        },\n        /**\n         * \n         * @param {int} index\n         * @returns {Object}\n         */\n        getPostAtIndex: function(index) {\n            this.current = index;\n            return this.queue[index];\n        },\n        /**\n         * \n         * @returns {Array}\n         */\n        getQueue: function() {\n            return this.queue;\n        },\n        /**\n         * \n         * @returns {int}\n         */\n        getCurrentIndex: function() {\n            return this.current\n        },\n        /**\n         * \n         * @returns {Object}\n         */\n        getCurrentPost: function() {\n            return this.queue[this.current];\n        },\n        /**\n         * \n         * @returns {Object}\n         */\n        getCurrentPostAndNext: function() {\n            var post = this.queue[this.current];\n            if ((this.current+1) < (this.getQueueDim()-1)) {\n                this.current += 1;\n            }\n            return post;\n        },\n        /**\n         * \n         * @returns {Object}\n         */\n        getCurrentPostAndPrev: function() {\n            var post = this.queue[this.current];\n            if ((this.current-1) > 0) {\n                this.current -= 1;\n            }\n            return post;\n        },\n        /**\n         * \n         * @returns {Object|Boolean}\n         */\n        nextPost: function() {\n            if ((this.current+1) > (this.getQueueDim()-1)) {\n                return false;\n            }\n            \n            this.current += 1;\n            return this.queue[this.current];\n        },\n        /**\n         * \n         * @returns {Object|Boolean}\n         */\n        prevPost: function() {\n            if ((this.current-1) < 0) {\n                return false;\n            }\n            \n            this.current -= 1;\n            return this.queue[this.current];\n        },\n        /**\n         * \n         */\n        printStatus : function() {\n            console.log(\"Queue: \" + this.queue);\n            console.log(\"Current: \" + this.queue[this.current]);\n            console.log(\"Current key: \" + this.current);\n        }\n    };\n});\n\n/**\n * Da utilizzare per comunicare lo stato del player tra la modale la floating ed eventualmente altri controller.\n * In questo modo la floating può eventualmente partire da dove ha finito la modale\n */\n\napp.service('playerStatus', function() {\n    return {\n        secFromStart : 0,\n        playing      : false,\n        paused       : false,\n        stopped      : false,\n        unstarted    : true,\n        buffering    : false,\n        loading      : false,\n        \n        /**\n         * \n         * @returns {sec|Number}\n         */\n        getSecFromStart : function() {\n            return this.secFromStart;\n        },\n        /**\n         * \n         * @param {int} sec\n         * @returns {void}\n         */\n        setSecFromStart : function(sec) {\n            this.secFromStart = sec;\n        },\n        \n        /**\n         * \n         * @returns {play|Boolean}\n         */\n        isPlaying : function() {\n            return this.playing;\n        },\n        /**\n         * \n         * @param {boolean} play\n         * @returns {void}\n         */\n        setPlay : function(play) {\n            this.playing = play;\n            if (this.playing) {\n                this.paused = false;\n                this.stopped = false;\n                this.unstarted = false;\n                this.buffering = false;\n                this.loading = false;\n            }\n        },\n        \n        /**\n         * \n         * @returns {Boolean|pause}\n         */\n        isPaused : function() {\n            return this.paused;\n        },\n        /**\n         * \n         * @param {boolean} pause\n         * @returns {void}\n         */\n        setPause : function(pause) {\n            this.paused = pause;\n            if (this.paused) {\n                this.playing = false;\n                this.stopped = false;\n                this.unstarted = false;\n                this.buffering = false;\n                this.loading = false;\n            }\n        },\n        \n        /**\n         * \n         * @returns {stop|Boolean}\n         */\n        isStopped : function() {\n            return this.stopped;\n        },\n        /**\n         * \n         * @param {boolean} stop\n         * @returns {void}\n         */\n        setStop : function(stop) {\n            this.stopped = stop;\n            if (this.stopped) {\n                this.playing = false;\n                this.paused = false;\n                this.unstarted = false;\n                this.buffering = false;\n                this.loading = false;\n            }\n        },\n        \n        /**\n         * \n         * @returns {unstart|Boolean}\n         */\n        isUnstarted : function() {\n            return this.unstarted;\n        },\n        /**\n         * \n         * @param {boolean} unstart\n         * @returns {void}\n         */\n        setUnstart : function(unstart) {\n            this.unstarted = unstart;\n            if (this.unstarted) {\n                this.secFromStart = 0;\n                this.playing = false;\n                this.paused = false;\n                this.stopped = false;\n                this.buffering = false;\n                this.loading = false;\n            }\n        },\n        \n        /**\n         * \n         * @returns {buffering|Boolean}\n         */\n        isBuffering : function() {\n            return this.buffering;\n        },\n        /**\n         * \n         * @param {boolean} buffering\n         * @returns {void}\n         */\n        setBuffering : function(buffering) {\n            this.buffering = buffering;\n            if (this.buffering) {\n                this.secFromStart = 0;\n                this.loading = false;\n                this.playing = false;\n                this.paused = false;\n                this.stopped = false;\n                this.unstarted = false;\n            }\n        },\n        \n        /**\n         * \n         * @returns {loaded|Boolean}\n         */\n        isLoading : function() {\n            return this.loading;\n        },\n        /**\n         * \n         * @param {boolean} load\n         * @returns {void}\n         */\n        setLoading : function(load) {\n            this.loading = load;\n            if (this.loading) {\n                this.secFromStart = 0;\n                this.playing = false;\n                this.paused = false;\n                this.stopped = false;\n                this.unstarted = false;\n                this.buffering = false;\n            }\n        },\n        \n        /**\n         * \n         */\n        printStatus : function() {\n            console.log(\"secFromStart: \" + this.getSecFromStart());\n            console.log(\"playing: \" + this.isPlaying());\n            console.log(\"paused: \" + this.isPaused());\n            console.log(\"stopped: \" + this.isStopped());\n            console.log(\"unstarted: \" + this.isUnstarted());\n            console.log(\"buffering: \" + this.isBuffering());\n            console.log(\"loading: \" + this.isLoading());\n        }\n    }\n})","/**\n * \n * @param {type} param1\n * @param {type} param2\n */\napp.controller('ItemsCtrl', function ItemsCtrl($scope, $rootScope, dataService, QUEUE_event) {\n    \n    /**\n     * \n     * @returns {undefined}\n     */\n    $scope.update = function() {\n        dataService.getPosts().then(function (data) {                       \n            $scope.collection = data;\n        });\n    };\n    \n    $scope.update(); \n    \n});\n\n/**\n * Controller for main player modal window\n */\napp.controller('modalInfoCtrl', function modalInfoCtrl($scope, $element, $rootScope, $window, dataService, playerStatus, YT_event, MODAL_STATUS){\n    \n    ////////////////////////////\n    /////////// VARS ///////////\n    ////////////////////////////\n    \n    $scope.YT_event = YT_event;\n    $scope.yt = {\n        playerStatus: YT_event.UNSTARTED\n    }\n    \n    //////////////////////////////\n    /////////// EVENTS ///////////\n    //////////////////////////////\n    \n    /**\n     * Listen for player status changes\n     */\n    $scope.$on(YT_event.STATUS_CHANGE, function (event, data, code) {\n        switch (code) {\n            case YT_event.LOADING:\n                playerStatus.setLoading(true);\n                break;\n            case YT_event.UNSTARTED:\n                playerStatus.setUnstart(true);\n                break;\n            case YT_event.PLAYING:\n                playerStatus.setPlay(true);\n                break;\n            case YT_event.PAUSED:\n                playerStatus.setPause(true);\n                break;\n            case YT_event.BUFFERING:\n                playerStatus.setBuffering(true);\n                break;\n            case YT_event.ENDED:\n                playerStatus.setStop(true);\n                \n                \n                break;\n        }\n    });\n    \n    /**\n     * Listen for the modal OPEN\n     */\n    $rootScope.$on(MODAL_STATUS.OPEN, function (status, data) {\n        $element.fadeTo(200, 1).draggable();\n        \n        if (playerStatus.getSecFromStart()>0) {\n            playerStatus.setPlay(true);\n            $scope.$broadcast(YT_event.PLAY);\n        }\n    });\n    \n    ////////////////////////////////\n    /////////// WATCHERS ///////////\n    ////////////////////////////////\n    \n    /**\n     * Init the modal data\n     */\n    $scope.$watch(function() {\n            return dataService.post;\n        }, \n        function(value, oldValue) {\n\n            $scope.setModalGraphic()\n\n        }, \n        true\n    );\n    \n    ///////////////////////////////\n    /////////// METHODS ///////////\n    ///////////////////////////////\n    \n    /**\n     * Play modal video\n     * \n     * @returns {void}\n     */\n    $scope.playVideo = function() {\n        playerStatus.setLoading(true);\n        this.$broadcast(YT_event.PLAY);\n    }\n    \n    /**\n     * Stop modal video\n     * \n     * @returns {void}\n     */\n    $scope.stopVideo = function() {\n        \n        if (playerStatus.isPlaying() || \n            playerStatus.isPaused() || \n            playerStatus.isBuffering() || \n            playerStatus.isLoading()) {\n            \n            this.$broadcast(YT_event.STOP);\n        }\n    }\n    \n    /**\n     * Put item data into scope of the current modal\n     *  \n     * @returns {void}\n     */\n    $scope.setModalGraphic = function() {\n        $scope.stopVideo();\n        $scope.item = dataService.getPost();\n    };\n    \n    /**\n     * Show comment, related and description draggable and resizable boxes\n     * \n     * @param {string} box\n     * @returns {void}\n     */\n    $scope.showBox = function(box) {\n        $(box).css({'z-index': 1000});\n        $(box).fadeTo(100, 1);\n        \n        var widthModalDialog = $('.modal-dialog').width();\n        \n        $(box).draggable({\n            containment: \"parent\",\n            snap: \"#myModal\",\n            stop: function(event, ui) {\n                \n            }\n        });\n        $(box).resizable({\n            handles: \"n, e, s, w, se\",\n            resize: function( event, ui ) {\n                \n            }\n        });\n    }\n    \n    /**\n     * Hide comment, related and description draggable and resizable boxes\n     * \n     * @param {string} box\n     * @returns {void}\n     */\n    $scope.hideBox = function(box) {\n        $(box).fadeTo(100, 0, function() {\n            $(box).css({'z-index': -1000});\n        });\n    }\n    \n    /**\n     * Give focus to the clicked box\n     * \n     * @param {string} target       selector clicked box\n     * @param {string} other_boxes  other opened boxes\n     * @returns {void}\n     */\n    $scope.focus = function(target, other_boxes) {\n        $(other_boxes).css({'z-index': 999});\n        $(target).css({'z-index': 1000});\n    }\n    \n    /**\n     * Close the modal and open a floating box where a new player start playing\n     * \n     * @param {string} box\n     * @returns {void}\n     */\n    $scope.showFloating = function() {\n       \n        /*$scope.$watch(function() { return playerStatus }, function(value) {\n            if (playerStatus.isPlaying() || playerStatus.isPaused() || playerStatus.isBuffering()) {\n                this.$broadcast(YT_event.STOP);\n            }\n        })*/\n        \n        if (playerStatus.isPlaying() || \n            playerStatus.isPaused() || \n            playerStatus.isBuffering() || \n            playerStatus.isLoading()) {\n        \n            this.$broadcast(YT_event.STOP);\n            \n        }\n        \n        $rootScope.$emit(MODAL_STATUS.CLOSE, 'CLOSE');\n        \n    };\n\n    /**\n     * \n     * @param {String} queueBox\n     * @returns {void}\n     */\n    $scope.addVideoToQueue = function() {\n        dataService.pushPostToQueue($scope.item);\n        $rootScope.$emit(QUEUE_event.ADD, 'ADD');\n    }\n    \n});\n\n/**\n * Controller for floating player window\n */\napp.controller('pushpinCtrl', function pushpinCtrl($scope, $rootScope, $element, $window, dataService, playerStatus, YT_event, MODAL_STATUS, QUEUE_event){\n    \n    ////////////////////////////\n    /////////// VARS ///////////\n    ////////////////////////////\n    \n    $scope.YT_event = YT_event;\n    $scope.yt = {\n        playerStatus: YT_event.UNSTARTED\n    }\n    \n    //////////////////////////////\n    /////////// EVENTS ///////////\n    //////////////////////////////\n    \n    /**\n     * Listen for player status changes\n     */\n    $scope.$on(YT_event.STATUS_CHANGE, function (event, data, code) {\n        switch (code) {\n            case YT_event.LOADING:\n                playerStatus.setLoading(true);\n                break;\n            case YT_event.UNSTARTED:\n                playerStatus.setUnstart(true);\n                break;\n            case YT_event.PLAYING:\n                playerStatus.setPlay(true);\n                break;\n            case YT_event.PAUSED:\n                playerStatus.setPause(true);\n                break;\n            case YT_event.BUFFERING:\n                playerStatus.setBuffering(true);\n                break;\n            case YT_event.ENDED:\n                $scope.stopVideo();\n                //playerStatus.setStop(true);\n                \n                /*\n                if ($('#queue-box-cont').find('div').length > 0) {\n                    $window.onYouTubeIframeAPIReady($scope.item.YT_id);\n                }\n                */\n                                    \n                if (dataService.getQueueDim() > 0) {\n                    \n                    $scope.item = dataService.getCurrentPostAndNext();\n                    $scope.playVideo();\n                    \n                }\n                break;\n        }\n    });\n    \n    /**\n     * Listen for the modal status changes\n     */\n    $rootScope.$on(MODAL_STATUS.CLOSE, function (status, data) {\n        $element.fadeTo(200, 1).draggable();\n        \n        if (playerStatus.getSecFromStart()>0) {\n        //if (!playerStatus.isUnstarted()) {\n            playerStatus.setPlay(true);\n            $scope.$broadcast(YT_event.PLAY);\n        }\n    });\n    \n    ////////////////////////////////\n    /////////// WATCHERS ///////////\n    ////////////////////////////////\n    \n    $scope.$watch(function() {\n            return dataService.post;\n        }, \n        function(value, oldValue) {\n            $scope.setFloatingGraphic();\n            //playerStatus.setUnstart(true);\n        }, \n        true\n    );\n    \n    ///////////////////////////////\n    /////////// METHODS ///////////\n    ///////////////////////////////\n    \n    /**\n     * Play modal video\n     * \n     * @returns {void}\n     */\n    $scope.playVideo = function() {\n        \n        playerStatus.setLoading(true);\n        this.$broadcast(YT_event.PLAY);\n\n    }\n    \n    /**\n     * Stop modal video\n     * \n     * @returns {void}\n     */\n    $scope.stopVideo = function() {\n        \n        if (playerStatus.isPlaying() || \n            playerStatus.isPaused() || \n            playerStatus.isBuffering() || \n            playerStatus.isLoading()) {\n            this.$broadcast(YT_event.STOP);\n        }\n    }\n    \n    /**\n     * Put item data into scope of the current floating box\n     * \n     * @returns {void}\n     */\n    $scope.setFloatingGraphic = function() {\n        $scope.pushpinHide(); // altrimenti la floating non se ne va quando si apre un'altra modale \n        playerStatus.setUnstart(true);\n        $scope.item = dataService.getPost();\n    }; \n    \n    /**\n     * \n     * @param {type} floating_sel\n     * @returns {undefined}\n     */\n    $scope.pushpinHide = function() {\n        \n        $scope.stopVideo();\n        $element.fadeTo(200, 0);\n        $element.css({\n            'display': 'none'\n        });\n    };\n    \n    /**\n     * \n     * @returns {undefined}\n     */\n    $scope.showModal = function() {\n        $element.fadeTo(200, 0);\n        \n        if (playerStatus.isPlaying() || \n            playerStatus.isPaused() || \n            playerStatus.isBuffering() || \n            playerStatus.isLoading()) {\n        \n            this.$broadcast(YT_event.STOP);\n        }\n        \n        $rootScope.$emit(MODAL_STATUS.OPEN, 'OPEN');\n    }\n    \n    $scope.addVideoToQueue = function() {\n        dataService.pushPostToQueue($scope.item);\n        $rootScope.$emit(QUEUE_event.ADD, 'ADD');\n    }\n});\n\napp.controller('QeueboxCtrl', function QeueBoxCtrl($scope, $document, $window, $element) {\n    /**\n     * init queue box\n     */\n    $document.ready(function () {\n        \n        $element.css({\n            'bottom': -$element[0].offsetHeight + 'px'\n        });\n    });\n    \n    \n    $scope.openCloseQueueBox = function() {\n        \n        if (($window.innerHeight - Math.ceil($element[0].getBoundingClientRect().top))>0) {\n            $element.animate({\n                'bottom': -$element[0].offsetHeight + 'px',\n                //'-webkit-box-shadow': '0 0 0 0 rgba(0, 0, 0, 0.5)',\n                //'box-shadow': '0 0 0 0 rgba(0, 0, 0, 0.5)'\n            }, 100); \n        }\n        else {\n            $element.animate({\n                'bottom': 0,\n                //'-webkit-box-shadow': '0 0 100px 30px rgba(0, 0, 0, 0.5)',\n                //'box-shadow': '0 0 100px 30px rgba(0, 0, 0, 0.5)'\n            }, 100);\n        }\n    } \n});\n\napp.controller('QeueCtrl', function QeueCtrl($scope, $rootScope, $element, dataService, playerStatus, QUEUE_event) {\n    \n    ////////////////////////////\n    /////////// VARS ///////////\n    ////////////////////////////\n    \n    //////////////////////////////\n    /////////// EVENTS ///////////\n    //////////////////////////////\n    \n    \n    \n    $rootScope.$on(QUEUE_event.ADD, function(data) {\n        $scope.queue = dataService.getQueue();\n    });\n    \n    ///////////////////////////////\n    /////////// METHODS ///////////\n    ///////////////////////////////\n    \n})\n","app.directive('isoRepeat', function ($timeout, $rootScope, dataService, playerStatus, QUEUE_event, YT_event) {\n    return {\n        scope: {\n            items: '=isoRepeat'\n        },\n        templateUrl: 'angular/templates/viewPreview.template.html',\n        link: function (scope, element, attrs) {\n\n            var options = {\n                itemSelector: '.video-prev',\n                animationEngine : 'jquery',\n                //percentPosition: true,\n                masonry : {\n                    columnWidth : '.video-prev',\n                    isFitWidth: true,\n                    gutter: 10\n                }\n            };\n\n            element.isotope(options);\n\n            scope.$watch('items', function(newVal, oldVal){\n                $timeout(function(){\n                    element.isotope( 'reloadItems' ).isotope({ sortBy: 'original-order' });\n                }, true);\n            });\n\n            /**\n             * TODO: Inizializza la modal, ma c'è troppo jquery, da rivedere\n             * \n             * @param {type} item\n             * @param {type} modal_sel\n             * @returns {undefined}\n             */\n            scope.modalInfoShow = function(item, modal_sel){\n            \n                // INIT MODAL\n                var modal = $(modal_sel);\n\n                $('.modal-dialog').css({\n                    //'margin': '0 auto',\n                    'width': '100%'\n                });\n                $('.draggable-box').attr('style', '');\n\n                $('.modal-dialog').draggable({\n                    containment: \"parent\",\n                    snap: \"#myModal\",\n                    stop: function(event, ui) {\n                    }\n                });\n\n                // TODO: ora che c'è la direttiva funcionante tutta questa parte può essere sbrigata dal template\n                //var title            = item.title;\n                var mediafiles       = item.mediafiles;\n                var img_header       = modal.find('#img-prev-video');\n\n                // si cerca l'ultimo file che dovrebbe essere il più grande possible\n                // TODO: da verificare\n                $.each(mediafiles, function(i, obj) {\n                    utils.biggerMediafiles = obj;\n                });\n                \n                item['src'] = utils.biggerMediafiles.url;\n                dataService.setPost(item);\n\n                var height = (modal.find('.img-video').width()/16)*9;\n                var total_height = height + $('.video-info-modal ').outerHeight() + $('.dati-video').outerHeight() + $('.header').outerHeight() + 60;\n\n                if (total_height > $(window).height()) {\n                    height = height - (total_height-$(window).height());\n                }\n\n                modal.find('.img-video').css({\n                    'height': '100%', \n                    'padding-bottom': $('.video-info-modal').outerHeight() + 'px'\n                });\n\n                $('.modal-dialog').resizable({\n                    handles: \"n, e, s, w, se\",\n                    resize: function( event, ui ) {\n                        modal.find('.img-video').css({\n                            'height': '100%', \n                            'padding-bottom': $('.video-info-modal').outerHeight() + 'px'\n                        });\n                    }\n                });\n                \n            }\n\n            scope.addVideoToQueue = function(item) {\n                dataService.pushPostToQueue(item);\n                $rootScope.$emit(QUEUE_event.ADD, 'ADD');/**/\n\n                console.log(item.YT_id);\n                \n            }\n        }\n    }\n});\n\napp.directive('jnFitImg', function() {\n    return {\n        link: function(scope, element, attrs) {\n            scope.resizeImage = function(width_img, height_img, container) {\n    \n                var new_h_img_width_cont = (height_img/width_img)*container.width();\n\n                var css = new Object();\n\n                if (new_h_img_width_cont <= container.height()) {\n                    var width_num = ((width_img/height_img)*container.height());\n                    var height_num = container.height();\n                    css['width']       = width_num + 'px';\n                    css['height']      = height_num + 'px';\n                    css['margin-top']  = '0px';\n                    css['margin-left'] = (-(width_num-container.width())/2) + 'px';\n                }\n                else {\n                    css['width']       = container.width() + 'px';\n                    css['height']      = new_h_img_width_cont + 'px';\n                    css['margin-top']  = (-(new_h_img_width_cont - container.height())/2) + 'px';\n                    css['margin-left'] = '0px';\n                }\n                \n                console.log(css);\n\n                return css;\n            };\n            \n            scope.fitImg = function() {\n                var imgContainer = $(element).parent();\n                var img = $(element);\n                \n                console.log(imgContainer);\n                console.log(img);\n                \n                var imgWidth = img.width();\n                var imgHeight = img.height();\n                \n                console.log(imgWidth);\n                console.log(imgHeight);\n                \n                imgContainer.css({'overflow':'hidden'})\n                img.css(scope.resizeImage(imgWidth, imgHeight, imgContainer));\n                \n            }\n            \n            element.one('load', function() {\n                scope.fitImg();\n            })\n            \n        }\n    }\n})\n\n/**\n * Based on poxrud/youtube-directive-example\n * Github https://github.com/poxrud/youtube-directive-example/blob/master/application.js\n * Blog post http://blog.oxrud.com/posts/creating-youtube-directive/\n */\napp.directive('youtube', function($window, dataService, playerStatus, YT_event){\n    \n    return {\n        restrict: \"E\",\n        \n        template: '<div style=\"width:100%; height:100%;\"></div>',\n        \n        // NOTA: usare un isolated scope non permetteva di aggiornare correttamente lo scope, facendo console.log(scope) si aveva il valore corretto, facendo console.log(scope.videoid) si aveva il valore vecchio\n        \n        /*scope: {\n            //videoid : '=videoid',\n            //videoid : '@videoid'\n        },*/\n\n        link: function(scope, element, attrs) {\n            \n            var tag = document.createElement('script');\n            tag.src = \"https://www.youtube.com/iframe_api\";\n            \n            var firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n            var player = null;\n            \n            scope.$on(YT_event.STOP, function () {\n                \n                attrs.$set('status',YT_event.ENDED);\n                \n                if ((!playerStatus.isLoading())&&\n                    (!playerStatus.isUnstarted())) {\n                /*if ((!playerStatus.isLoading())) {*/\n                    \n                    if (player !== null) {\n                        playerStatus.setSecFromStart(player.getCurrentTime());\n                \n                        playerStatus.printStatus();\n                \n                        player.seekTo(0);\n                        player.stopVideo();\n                        player.clearVideo();\n                        player.destroy();\n                    }\n                }\n                \n                element.css({\n                    'width':'0', \n                    'height':'0', \n                    'padding-bottom':'inherit'\n                });\n                \n                playerStatus.setStop(true);\n                \n            });\n            \n            /*console.log('0-scope');\n            console.log(scope);\n            console.log(\"scope.videoid: \" + scope.videoid);*/\n\n            scope.$on(YT_event.PLAY, function (event, args) {\n                \n                element.css({\n                    'width':'100%', \n                    'height':'100%', \n                    'padding-bottom':'inherit'\n                });\n                \n                /*console.log('1-scope');\n                console.log(scope);\n                console.log(\"scope.videoid: \" + scope.videoid);*/\n\n                $window.onYouTubeIframeAPIReady = function() {\n                    \n                    /*console.log('2-scope');\n                    console.log(scope);\n                    console.log(\"scope.videoid: \" + scope.videoid);*/\n                    \n                    player = new YT.Player(element.children()[0], {\n                        videoId: scope.item.YT_id,\n                        //videoId: scope.videoid,\n                        playerVars: {\n                            'showinfo': 0,\n                            'modestbranding': 0,\n                            'rel': 0\n                        },\n                        events: {\n                            'onReady': function(event) {\n                                scope.$apply(function() {\n                                    if (playerStatus.getSecFromStart()>0) {\n                                        player.seekTo(playerStatus.getSecFromStart(), false);\n                                    }\n                                    player.playVideo();\n                                    \n                                });\n                            },\n                            'onStateChange': function(event) {\n                                var message = {\n                                    event: YT_event.STATUS_CHANGE,\n                                    data: \"\",\n                                    code: event.data\n                                };\n                                \n                                attrs.$set('status', event.data);\n                                \n                                if (playerStatus.isStopped()) {\n                                    player.seekTo(0);\n                                    player.stopVideo();\n                                    player.clearVideo();\n                                    player.destroy();\n                                    \n                                    element.css({\n                                        'width':'0', \n                                        'height':'0', \n                                        'padding-bottom':'inherit'\n                                    });\n                                }\n                                else {\n                                \n                                    switch(event.data) {\n                                        case YT.PlayerState.PLAYING:\n                                            message.data = \"PLAYING\";\n                                            break;\n                                        case YT.PlayerState.ENDED:\n                                            message.data = \"ENDED\";\n                                            break;\n                                        case YT.PlayerState.UNSTARTED:\n                                            message.data = \"NOT PLAYING\";\n                                            break;\n                                        case YT.PlayerState.BUFFERING:\n                                            message.data = \"BUFFERING\";\n                                            break;\n                                        case YT.PlayerState.PAUSED:\n                                            message.data = \"PAUSED\";\n                                            break;\n                                    };\n\n                                    scope.$apply(function() {\n                                        scope.$emit(message.event, message.data, message.code);\n                                    });\n                                }\n                            }\n                        }\n                    });\n                };\n\n                $window.onYouTubeIframeAPIReady();\n                \n                \n            }); \n\n            scope.$on(YT_event.PAUSE, function () {\n                player.pauseVideo();\n                \n                attrs.$set('status', YT_event.PAUSED);\n                playerStatus.setPause(true);\n            }); \n        }\n    }\n})\n\n/**\n * \n */\napp.directive('jnHover', ['$animate', function($animate) {\n    return function(scope, element, attrs) {\n\n        element.hover(\n            function() {\n            \n                element.find('.frame-prev').stop(true).animate({\n                    'border-width' : '4px'\n                },100);\n\n                element.find('.video-instruments').stop(true).animate({\n                    'top' : -$(this).find('.video-instruments').innerHeight() + 'px'\n                },100);\n\n                element.find('.cover-prev-img').fadeTo(100, 1);\n\n            },\n            function() {\n                element.find('.frame-prev').stop(true).animate({\n                    'border-width' : '0px'\n                },100);\n\n                element.find('.video-instruments').stop(true).animate({\n                    'top' : '0px'\n                },100);\n\n                element.find('.cover-prev-img').fadeTo(100, 0);\n                \n                // se il menu è aperto, lasciando la preview si chiude\n                element\n                    .find('.video-instruments ')\n                    .find(\".dropdown-toggle[aria-expanded=true]\")\n                    .dropdown(\"toggle\");\n            }\n        );\n    }\n}]);\n\n/**\n * \n */\napp.directive('jnSlideHiddenElement', function() {\n    return {\n        link: function(scope, element, attrs) {\n            element.hover(\n                function() {\n                    utils.left_dist       = element.offset().left;\n                    utils.right_dist      = $(window).width() - (element.offset().left + element.width());\n\n                    if (utils.left_dist<0) {\n\n                        // elemento a sinistra parzialmente visibile\n\n                        var ombra = html.ombra_dx;\n                        var left_mod = \"+=\" + ((-utils.left_dist) + 10) + \"px\";\n                        var cover = element.next();\n\n                        show_incomplete_prev(element, ombra, left_mod, cover);\n                    }\n                    else if (utils.right_dist<0) {\n\n                        // elemento a destra parzialmente visibile\n\n                        var ombra = html.ombra_sx;\n                        var left_mod = \"-=\" + ((-utils.right_dist) + 10)  + \"px\";\n                        var cover = element.prev();\n\n                        show_incomplete_prev(element, ombra, left_mod, cover);    \n                    }/**/\n                },\n                function() {\n                    if (utils.left_dist<0) {\n\n                        var ombra = html.ombra_dx;\n                        var left_mod = 0;\n                        var cover = element.next();\n\n                        hide_incomplete_prev(element, ombra, left_mod, cover);\n                    }\n                    else if (utils.right_dist<0) {\n\n                        var ombra = html.ombra_sx;\n                        var left_mod = element.prev().position().left + element.width() + 10 + \"px\";\n                        var cover = element.prev();\n\n                        hide_incomplete_prev(element, ombra, left_mod, cover);\n                    }\n                }\n            );\n        }\n    }\n});\n\n/**\n * \n */\napp.directive('jnHoverFloating', ['$animate', function($animate) {\n    return function(scope, element, attrs) {\n        element.hover(\n            function() {\n                \n                // appare titolo video floating\n                var infoVideo = element.find('.video-info');\n                infoVideo.stop(true).animate({\n                   'bottom' : (-infoVideo.outerHeight()) + 'px' \n                },\n                100);\n                \n                // appare header floating\n                var header = element.find('.header');\n                header.stop(true).animate({\n                   'top' : (-header.outerHeight()) + 'px' \n                },\n                100);\n            },\n            function() {\n                \n                // scompare titolo video floating\n                var infoVideo = element.find('.video-info');\n                infoVideo.stop(true).animate({\n                   'bottom' : '0px' \n                },\n                100);\n                \n                // scompare header floating\n                var header = element.find('.header');\n                header.stop(true).animate({\n                   'top' : '0px' \n                },\n                100);\n            }\n        );\n    }\n}]);\n\n/**\n * \n */\n\n/*\napp.directive('jnOnShowModal', function (dataService, playerStatus, $rootScope, YT_event, MODAL_STATUS) {\n    \n    return {\n        link: function(scope, element, attrs) {\n            \n            scope.$watch(function() {\n                    return dataService.post;\n                }, \n                function(value, oldValue) {\n\n                    scope.setModalGraphic()\n\n                }, \n                true\n            );\n        }\n    } \n});\n*/\n\n/**\n * \n */\n/*\napp.directive('jnOnShowFloating', function(dataService, playerStatus) {\n    return {\n        link: function(scope, element, attrs) {\n            \n            scope.$watch(function() {\n                    return dataService.post;\n                }, \n                function(value, oldValue) {\n                    scope.setFloatingGraphic();\n                    playerStatus.setUnstart(true);\n                }, \n                true\n            );\n    \n        }\n    } \n});\n*/\n\n/**\n * \n */\napp.directive('jnQueueSlide', function() {\n    return {\n        link: function(scope, element, attr) {\n            scope.setWidth = function(element) {\n                \n                scope.width = 0;\n                scope.lastLeft = 0;\n                scope.direction = '';\n                scope.lastOffset = 0;\n                \n                element.children().each(function(index, obj) {\n                    scope.width = scope.width + $(obj).outerWidth();\n                });\n                \n                $(element[0]).css({\n                   'width': scope.width + 'px'\n                });\n                \n                if (scope.width > $(window).width()) {\n                    \n                    // TODO: meglio se si usa lo scroll normale, nascondendo la scrollbar\n                    \n                    $(element).draggable({\n                        axis: \"x\",\n                        start: function(event, ui) {\n                            //$(element).draggable( \"enable\" );\n                        },\n                        stop: function(event, ui) {\n                            \n                            \n                            /*var newLeft = 0;\n                            if (scope.direction === 'left') {\n                                newLeft = scope.lastLeft - 100\n                            }\n                            else {\n                                newLeft = scope.lastLeft + 100\n                            }\n                            $(element).stop().animate({\n                                'left': newLeft + 'px'\n                            }, 200);*/\n                        },\n                        drag: function(event, ui) {\n                            \n                            scope.lastOffset = ui.position.left - scope.lastLeft;\n                            \n                            console.log(scope.lastOffset);\n                            \n                            if (ui.position.left > scope.lastLeft) {\n                                scope.direction = 'right';\n                            }\n                            else {\n                                scope.direction = 'left';\n                            }\n                            \n                            if (ui.position.left > 0) {\n                                ui.position.left = 0;\n                            }\n                            \n                            scope.lastLeft = ui.position.left;\n                            \n                        }\n                    });\n                }\n                \n                console.log(element[0].offsetWidth);\n            }\n        }\n    }\n}).directive('jnQueueSlideElement', function () {\n    return {\n        link: function(scope, element, attr) {\n            scope.setWidth(element.parent());\n        }\n    }\n});\n"],"sourceRoot":"/source/"}