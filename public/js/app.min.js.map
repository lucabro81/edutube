{"version":3,"sources":["utility.js","frontend.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"app.min.js","sourcesContent":["function baseUrl() {\n    var win_loc = window.location;\n    if (win_loc.host === 'localhost') {\n        return win_loc.protocol + \"//\" + win_loc.host + \"/edutube/public/\";\n    }\n    return win_loc.protocol + \"//\" + win_loc.host + \"/remote/host/path/\";\n};\n\nfunction debug_console(msg) {\n    var win_loc = window.location;\n    if (win_loc.host === 'localhost') {\n            console.log(msg);\n    }\n}\n\nfunction errorResponse(xhr, status, error) {\n    debug_console(xhr);\n    debug_console(status);\n    debug_console(error);\n}","\nvar items = {\n    videoPrev       : null,\n    this_video_prev : null,\n    framePrev       : null,\n    modalInfo       : null\n}\n\nvar utils = {\n    'width_window'        : 0,\n    'height_window'       : 0,\n    'left_dist'           : 0,\n    'right_dist'          : 0,\n    'incomplete_cover_dx' : false\n}\n\nvar html = {\n    'prev_cover' : \"<div class='prev_cover'></div>\",\n    'ombra_dx'   : \"<div class='ombra_dx'></div>\",\n    'ombra_sx'   : \"<div class='ombra_sx'></div>\"\n}\n\n// HANDLERS\n\n/**\n * \n * @param {type} width_img\n * @param {type} height_img\n * @param {type} container\n * @returns {resizeImage.css|Object}\n */\nfunction resizeImage(width_img, height_img, container) {\n    \n    var new_h_img_width_cont = (height_img/width_img)*container.width();\n    //console.log(new_h_img_width_cont + \" = \" + \"(\" + height_img + \"/\" + width_img + \")*\" + container.width());\n    \n    var css = new Object();\n\n    if (new_h_img_width_cont <= container.height()) {\n        var width_num = ((width_img/height_img)*container.height());\n        var height_num = container.height();\n        css['width']       = width_num + 'px';\n        css['height']      = height_num + 'px';\n        css['margin-top']  = '0px';\n        css['margin-left'] = (-(width_num-container.width())/2) + 'px';\n    }\n    else {\n        css['width']       = container.width() + 'px';\n        css['height']      = new_h_img_width_cont + 'px';\n        css['margin-top']  = (-(new_h_img_width_cont - container.height())/2) + 'px';\n        css['margin-left'] = '0px';\n    }\n\n    return css;\n};\n\n/**\n * \n * @param {type} this_video_prev\n * @param {type} ombra\n * @param {type} left_mod\n * @param {type} cover\n * @returns {undefined}\n */\nfunction show_incomplete_prev(this_video_prev, ombra, left_mod, cover) {\n    \n    $(this_video_prev).css({'z-index': 200});\n    $(this_video_prev).append(ombra);\n    cover.append(html.prev_cover);\n\n    $(this_video_prev).stop(true).animate({\n        'left': left_mod\n    }, \n    {\n        duration : 100,\n        start: function() {\n            cover.find(\".prev_cover\").hide();\n\n            $(this_video_prev).find($(ombra).attr(\"class\")).hide();\n\n            cover.find(\".prev_cover\").fadeTo(100, 0.5);\n            $(this_video_prev).find($(ombra).attr(\"class\")).fadeTo(100, 1);\n        }\n    });\n}\n\n/**\n * \n * @param {type} this_video_prev\n * @param {type} ombra\n * @param {type} left_mod\n * @param {type} cover\n * @returns {undefined}\n */\nfunction hide_incomplete_prev(this_video_prev, ombra, left_mod, cover) {\n    \n    $(this_video_prev).stop(true).animate({\n        'left': left_mod\n    }, \n    {\n        duration : 100,\n        start: function() {\n\n            cover.find(\".prev_cover\").fadeTo(100, 0, function(){\n                $(this).remove();\n            });\n\n            $(this_video_prev).find(\".\"+$(ombra).attr(\"class\")).fadeTo(100, 0, function() {\n                $(this).remove();\n            });\n        },\n        end: function() {\n            $(this_video_prev).css({'z-index': 0});\n        }\n    });\n}\n\n// LISTENERS\n\n/*$(window).on('load', function(event){\n\n    utils.width_window = $(window).width();\n    utils.height_window = $(window).height();\n\n    $('#main').isotope({\n        masonry : {\n            columnWidth : 320,\n            isFitWidth: true,\n            gutter: 10\n        }\n    });\n\n});*/\n\n$(document).ready(function(){\n    /*items.videoPrev = $('.video-prev');\n    items.framePrev = $('.frame-prev');\n    items.modalInfo = $('.modal-info');\n\n    items.videoPrev.hover(\n        function() {\n            \n            utils.left_dist       = $(this).offset().left;\n            utils.right_dist      = $(window).width() - ($(this).offset().left + $(this).width());\n            items.this_video_prev = this;\n            \n            if (utils.left_dist<0) {\n                \n                // elemento a sinistra parzialmente visibile\n                \n                var ombra = html.ombra_dx;\n                var left_mod = \"+=\" + ((-utils.left_dist) + 10) + \"px\";\n                var cover = $(items.this_video_prev).next();\n                \n                show_incomplete_prev(items.this_video_prev, ombra, left_mod, cover);\n            }\n            else if (utils.right_dist<0) {\n                \n                // elemento a destra parzialmente visibile\n                \n                var ombra = html.ombra_sx;\n                var left_mod = \"-=\" + ((-utils.right_dist) + 10)  + \"px\";\n                var cover = $(items.this_video_prev).prev();\n                \n                show_incomplete_prev(items.this_video_prev, ombra, left_mod, cover);    \n            }\n        },\n        function() {\n            \n            if (utils.left_dist<0) {\n                \n                var ombra = html.ombra_dx;\n                var left_mod = 0;\n                var cover = $(items.this_video_prev).next();\n                \n                hide_incomplete_prev(items.this_video_prev, ombra, left_mod, cover);\n            }\n            else if (utils.right_dist<0) {\n                \n                var ombra = html.ombra_sx;\n                var left_mod = $(items.this_video_prev).prev().position().left + $(items.this_video_prev).width() + 10 + \"px\";\n                var cover = $(items.this_video_prev).prev();\n                \n                hide_incomplete_prev(items.this_video_prev, ombra, left_mod, cover);\n            }\n            \n            \n        }\n    );*/\n    \n    /*items.videoPrev.hover(\n        function() {\n            \n            $(this).find('.frame-prev').stop(true).animate({\n                'border-width' : '4px'\n            },100);\n            \n            $(this).find('.video-instruments').stop(true).animate({\n                'top' : -$(this).find('.video-instruments').innerHeight() + 'px'\n            },100);\n            \n            $(this).find('.cover-prev-img').fadeTo(100, 1);\n            \n        },\n        function() {\n            $(this).find('.frame-prev').stop(true).animate({\n                'border-width' : '0px'\n            },100);\n            \n            $(this).find('.video-instruments').stop(true).animate({\n                'top' : '0px'\n            },100);\n            \n            $(this).find('.cover-prev-img').fadeTo(100, 0);\n        }\n    );*/\n    \n    /*$(document).on('click', '.modal-info, .close-modal-info-video', function() {\n        var modal = $('.modal-info-video');\n        var videoId = $(this).data('video');\n        var videoSlug = $(this).data('slug');\n        var modalOpen = modal.data('open');\n        \n        if (modalOpen === true) {\n            \n            // chiude modal\n            \n            modal.fadeTo(200, 0, function() {\n                modal.data('open', false);\n                modal.css({'z-index': -1000});\n            });\n        }\n        else {\n            \n            // apre modal\n            \n            // INIT MODAL\n            modal.css({'z-index': 1000});\n            modal.find('img').attr('src', '');\n            \n            $.ajax({\n                dataType: 'json',\n                type: 'GET',\n                url: baseUrl() + 'post/' + videoId + '/' + videoSlug,\n                success: function(response) {\n                    var title            = response.title;\n                    var mediafiles       = response.mediafiles;\n                    var biggerMediafiles = null;\n                    var categories       = response.categories;\n                    var description      = response.mediafiles;\n                    \n                    // si cerca l'ultimo file che dovrebbe essere il più grande possible\n                    // TODO: da verificare\n                    $.each(mediafiles, function(index, obj) {\n                        biggerMediafiles = obj;\n                    });\n                    \n                    modal.find('img').attr('src', biggerMediafiles.url);\n                    modal.find('img').css(resizeImage(biggerMediafiles.width, biggerMediafiles.height, modal.find('.img-video')));\n                    modal.find('.img-video').find('p').text(title);\n                },\n                error: function(xhr, status, error){\n                    errorResponse(xhr, status, error);\n                }\n            });\n            \n            modal.data('open', true);\n            modal.fadeTo(200, 1);\n        }\n    });*/\n});","//var app = angular.module('edutube', ['ngRoute', 'postWallCtrl']);\nvar app = angular.module('edutube', ['ngRoute', 'ngAnimate'], function($interpolateProvider) {\n    $interpolateProvider.startSymbol('{??');\n    $interpolateProvider.endSymbol('??}');\n});\n\n/*app.run(function(){\n    \n});\n\napp.config(function($routeProvider, $locationProvider) {\n    $routeProvider.when('/',{\n        templateUrl: 'angular/templates/viewPreview.template.html',\n        controller: 'postWallController'\n    });\n});*/\n\napp.filter('dateToISO', function() {\n    return function(input) {\n        var goodTime = input.replace(/(.+) (.+)/, \"$1T$2Z\");\n        return goodTime;\n    };\n});\n\napp.filter('imgByName', function(){\n    return function(input, name) {\n        \n        var imgUrl = '';\n        $.each(input, function(i, obj) {\n            if (obj.nome === name) {\n                imgUrl = obj.url;\n                return false;\n            }\n        });\n        \n        if (imgUrl === '') {\n            return 'placeholder';\n        }\n        return imgUrl;\n    };\n})\n\napp.directive('isoRepeat', function ($timeout, dataService ) {\n        return {\n            scope: {\n                items: '=isoRepeat'\n            },\n            templateUrl: 'angular/templates/viewPreview.template.html',\n            link: function (scope, element, attrs) {\n\n                var options = {\n                    animationEngine : 'jquery',\n                    masonry : {\n                        columnWidth : 320,\n                        isFitWidth: true,\n                        gutter: 10\n                    }\n                };\n\n                element.isotope(options);\n\n                scope.$watch('items', function(newVal, oldVal){\n                    $timeout(function(){\n                        element.isotope( 'reloadItems' ).isotope({ sortBy: 'original-order' }); \n\n                    });\n                }, true);\n    \n                scope.modalInfoShow = function(item, modal_sel){\n                    \n                    var modal = $(modal_sel);\n                    \n                    modal.addClass('show-modal');\n                    \n                    dataService.post = item;\n                    \n                    // TODO: ora che c'è la direttiva funcionante tutta questa parte può essere sbrigata dal template\n                    //var title            = item.title;\n                    var mediafiles       = item.mediafiles;\n                    var biggerMediafiles = null;\n                    var categories       = item.categories;\n                    var description      = item.mediafiles;\n                    var img_header       = modal.find('#img-prev-video');\n                    \n                    modal.css({'z-index': 1000});\n                    \n                    // si cerca l'ultimo file che dovrebbe essere il più grande possible\n                    // TODO: da verificare\n                    $.each(mediafiles, function(i, obj) {\n                        biggerMediafiles = obj;\n                    });\n                    \n                    img_header.attr('src', biggerMediafiles.url);\n                    img_header.one('load', function () {\n                        \n                        // lo metto prima se no il 100% viene inteso come 100px, possibile bug jquery\n                        modal.fadeTo(200, 1);\n                        img_header.css(resizeImage(biggerMediafiles.width, biggerMediafiles.height, modal.find('.img-video')));\n                        modal.find('.img-video').find('p').text(title);\n                        \n                        modal.attr('hideon', 1);\n\n                    });\n                    \n                }\n            }\n        }\n    }\n);\n\napp.directive('ngHover', ['$animate', function($animate) {\n    return function(scope, element, attrs) {\n\n        /*\n        element.on('click', function() {\n            if(element.hasClass('clicked')) {\n                $animate.removeClass(element, 'clicked');\n            } else {\n                $animate.addClass(element, 'clicked');\n            }\n        });\n        */\n\n        element.hover(\n            function() {\n                utils.left_dist       = element.offset().left;\n                utils.right_dist      = $(window).width() - (element.offset().left + element.width());\n\n                if (utils.left_dist<0) {\n\n                    // elemento a sinistra parzialmente visibile\n\n                    var ombra = html.ombra_dx;\n                    var left_mod = \"+=\" + ((-utils.left_dist) + 10) + \"px\";\n                    var cover = element.next();\n\n                    show_incomplete_prev(element, ombra, left_mod, cover);\n                }\n                else if (utils.right_dist<0) {\n\n                    // elemento a destra parzialmente visibile\n\n                    var ombra = html.ombra_sx;\n                    var left_mod = \"-=\" + ((-utils.right_dist) + 10)  + \"px\";\n                    var cover = element.prev();\n\n                    show_incomplete_prev(element, ombra, left_mod, cover);    \n                }/**/\n            },\n            function() {\n                if (utils.left_dist<0) {\n\n                    var ombra = html.ombra_dx;\n                    var left_mod = 0;\n                    var cover = element.next();\n\n                    hide_incomplete_prev(element, ombra, left_mod, cover);\n                }\n                else if (utils.right_dist<0) {\n\n                    var ombra = html.ombra_sx;\n                    var left_mod = element.prev().position().left + element.width() + 10 + \"px\";\n                    var cover = element.prev();\n\n                    hide_incomplete_prev(element, ombra, left_mod, cover);\n                }\n            }\n        );\n\n        element.hover(\n            function() {\n            \n                element.find('.frame-prev').stop(true).animate({\n                    'border-width' : '4px'\n                },100);\n\n                element.find('.video-instruments').stop(true).animate({\n                    'top' : -$(this).find('.video-instruments').innerHeight() + 'px'\n                },100);\n\n                element.find('.cover-prev-img').fadeTo(100, 1);\n\n            },\n            function() {\n                element.find('.frame-prev').stop(true).animate({\n                    'border-width' : '0px'\n                },100);\n\n                element.find('.video-instruments').stop(true).animate({\n                    'top' : '0px'\n                },100);\n\n                element.find('.cover-prev-img').fadeTo(100, 0);\n            }\n        );\n    }\n}]);\n\napp.directive('ngOnshow', function ($timeout, dataService) {\n    \n    \n    return function(scope, element, attrs) {\n        scope.$watch(function() {\n                return dataService.post;\n            }, \n            function(value, oldValue) {\n                scope.setModalGraphic()\n            }, \n            true);/**/\n    }\n});/**/\n\napp.controller('ItemsCtrl', function ItemsCtrl($scope, $timeout, dataService) {\n    \n    $scope.update = function() {\n        \n        dataService.get().then(function (data) {                       \n            $scope.collection = data;\n        });\n    };\n    \n    $scope.update(); \n    \n});\n\napp.controller('modalInfoCtrl', function modalInfoCtrl($scope, dataService){\n    \n    $scope.setModalGraphic = function() {\n        $scope.item = dataService.post;\n    };\n    \n    $scope.modalInfoHide = function(modal_sel) {\n        \n        var modal = $(modal_sel);\n        modal.attr('hideon', 0);\n        \n        modal.fadeTo(200, 0, function() {\n            modal.css({'z-index': -1000});\n        });\n    } \n    \n});\n    \napp.service('dataService', function ($http) {\n    \n    return {\n        get: function () {\n            var promise = $http\n                .get(baseUrl() + 'api/posts')\n                .then(function (resp) {\n                    return resp.data.featured;\n                });\n            return promise;\n        },\n        post: null \n    };\n});\n\n/*app.animation('.video-prev', [function() {\n  return {\n    // make note that other events (like addClass/removeClass)\n    // have different function input parameters\n    enter: function(element, doneFn) {\n      jQuery(element).fadeIn(1000, doneFn);\n\n      // remember to call doneFn so that angular\n      // knows that the animation has concluded\n    },\n\n    move: function(element, doneFn) {\n      jQuery(element).fadeIn(1000, doneFn);\n    },\n\n    leave: function(element, doneFn) {\n      jQuery(element).fadeOut(1000, doneFn);\n    }\n  }\n}]);*/"],"sourceRoot":"/source/"}